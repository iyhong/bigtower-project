<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="hoTreatChart">
 	
 	<!-- 환자등록시 자동 차트 생성(뷰페이지없음) -->
 	<insert id="addChart" parameterType="com.team4.project.hospital.treatChart.domain.HoChart">
 		INSERT into ho_chart(
 			HO_CHART_CODE,
 			HO_PATIENT_CODE,
 			HO_HOSPITAL_CODE,
 			HO_CHART_REGISTRATION_DATE,
 			HO_GO_SENDSTATE)
 		SELECT
 			<!-- 병원코드 + 차트번호로 차트코드 생성 -->
 			if(not exists (select * from ho_chart) ,
				CONCAT(#{hoHospitalCode},'chart_1'), <!-- 차트코드가 없을때 -->
				CONCAT(#{hoHospitalCode},  <!-- 차트코드가 있을때 -->
						'chart_',
						max(cast(substring(ho_chart.HO_CHART_CODE,17,5) as UNSIGNED ))+1)),	
 			<!-- 방금 등록된 환자의 코드번호를 가져오기 위해 서브쿼리를 사용함 -->
 			(SELECT
			 	CONCAT('patient_',max(cast(substring(ho_patient.HO_PATIENT_CODE,9,5) as UNSIGNED )))
			FROM ho_patient),
 			#{hoHospitalCode},
 			now(),
 			0
 		FROM ho_chart
 	</insert>
 	
 	<!-- 진료 목록 보기 -->
 	<select id="treatmentList" resultType="com.team4.project.hospital.treatChart.domain.HoTreatSub" parameterType="String">
		SELECT
			HO_TREATMENT_CODE,
			ho_patient.HO_PATIENT_CODE,
			ho_patient.HO_PATIENT_NAME,
			ho_hospital.HO_HOSPITAL_CODE,
			ho_hospital.HO_HOSPITAL_NAME,
			ho_doctor.HO_DOCTOR_ID,
			ho_doctor.HO_DOCTOR_NAME,
			ho_treatment.HO_TREAT_SUBJECT_CODE,
			ho_treat_subject.HO_TREAT_SUBJECT_NAME,
			ho_treatment.HO_TREATMENT_WRITE_DATE
		FROM ho_treatment
		JOIN ho_patient
			ON ho_patient.HO_PATIENT_CODE = ho_treatment.HO_PATIENT_CODE
		JOIN ho_hospital
			ON ho_hospital.HO_HOSPITAL_CODE = ho_treatment.HO_HOSPITAL_CODE
		JOIN ho_treat_subject
			ON ho_treat_subject.HO_TREAT_SUBJECT_CODE = ho_treatment.HO_TREAT_SUBJECT_CODE
		JOIN ho_doctor
			ON ho_doctor.HO_DOCTOR_ID = ho_treatment.HO_DOCTOR_ID
		WHERE ho_hospital.HO_HOSPITAL_CODE=#{hospitalCode}
 	</select>
 	
 	<!-- 목록에서 한 개의 진료 상세보기 -->
 	<select id="treatView" resultType="com.team4.project.hospital.treatChart.domain.HoTreatSub" parameterType="String">
 		SELECT
 			HO_TREATMENT_CODE, 
 			ho_doctor.HO_DOCTOR_NAME,
 			HO_CHART_CODE,
 			ho_patient.HO_PATIENT_NAME,
 			ho_treat_subject.HO_TREAT_SUBJECT_NAME
 		FROM ho_treatment
 		JOIN ho_doctor
 			ON ho_treatment.HO_DOCTOR_ID = ho_doctor.HO_DOCTOR_ID
 		JOIN ho_patient
 			ON ho_treatment.HO_PATIENT_CODE = ho_patient.HO_PATIENT_CODE
 		JOIN ho_treat_subject
 			ON ho_treatment.HO_TREAT_SUBJECT_CODE = ho_treat_subject.HO_TREAT_SUBJECT_CODE
 		WHERE
 			HO_TREATMENT_CODE = #{hoTreatmentCode}
 	</select>
 	
 	<!-- 검사이름 가져오기 -->
 	<select id="selectTest" resultType="com.team4.project.hospital.dto.HoTest">
 		SELECT
			HO_TEST_CODE,
			HO_TEST_NAME
		FROM ho_test
 	</select>
 	
 	<!-- 질병이름 가져오기 -->
 	<select id="selectDisease" resultType="com.team4.project.hospital.dto.HoDisease">
 		SELECT
			HO_DISEASE_CODE,
			HO_DISEASE_KOR
		FROM ho_disease
 	</select>
 	
 	<!-- 수술이름 가져오기 -->
 	<select id="selectOperation" resultType="com.team4.project.hospital.dto.HoOperationType">
 		SELECT
			HO_OPERATION_TYPE_CODE,
			HO_OPERATION_TYPE_NAME
		FROM ho_operation_type
 	</select>
 	
 	<!-- 백신타입 이름 가져오기 -->
 	<select id="selectVaccine" resultType="com.team4.project.hospital.dto.HoVaccineType">
 		SELECT
 			HO_VACCINE_TYPE_CODE,
 			HO_VACCINE_TYPE_NAME
 		FROM ho_vaccine_type
 	</select>
 	
 	
 	<!-- 접수완료 클릭시 진료 데이터 생성 -->
 	<insert id="addTreat" parameterType="com.team4.project.hospital.treatChart.domain.HoTreat">
 		INSERT INTO ho_treatment(
 			HO_TREATMENT_CODE,
 			HO_DOCTOR_ID,
 			HO_CHART_CODE,
 			HO_PATIENT_CODE,
 			HO_HOSPITAL_CODE,
 			HO_TREAT_SUBJECT_CODE,
 			HO_TREATMENT_WRITE_DATE,
 			HO_GO_SENDSTATE,
 			HO_HOSPITALIZATION_STATE_CODE)
 		SELECT
 			if(not exists (select * from ho_treatment),
 							'treatment_1',
 							CONCAT('treatment_',
 							max(cast(substring(HO_TREATMENT_CODE,11,5) as UNSIGNED ))+1)),
 			#{hoDoctorId},
 			#{hoChartCode},
 			#{hoPatientCode},
 			#{hoHospitalCode},
 			#{hoTreatSubjectCode},
 			now(),
 			0,
 			5
 		FROM ho_treatment
 	</insert>
 	
 	<!-- 환자코드에 맞는 차트코드 가져오기 -->
 	<select id="selectChartCode" resultType="String" parameterType="Map">
 		SELECT
			HO_CHART_CODE
		FROM ho_chart
		WHERE
			HO_PATIENT_CODE = #{hoPatientCode} AND
			HO_HOSPITAL_CODE = #{hoHospitalCode}
 	</select>
 	
 	<!-- 진료 상세보기에서 진료내용 업데이트 -->
 	<update id="updateTreat" parameterType="com.team4.project.hospital.treatChart.domain.HoTreat">
 		UPDATE
 			ho_treatment
 		SET
 			HO_TREATMENT_CONTENTS = #{hoTreatmentContents}
 		WHERE
 			HO_TREATMENT_CODE = #{hoTreatmentCode}
 	</update>
</mapper>
