<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="VC">
	
	<!-- 건강검진 검사상태2가지 목록-->
	<select id="checkupList" resultType="com.team4.project.hospital.test.domain.HoTestRequestSub" 
			parameterType="com.team4.project.hospital.test.domain.HoTestRequestSub">
		select
			ho_test_request.HO_TEST_REQUEST_CODE,
			ho_treatment.HO_TREATMENT_CODE,
			ho_patient.HO_PATIENT_NAME,
			ho_test_state.HO_TEST_STATE_NAME 	
		from ho_test_request
		join ho_treatment
			ON ho_treatment.HO_TREATMENT_CODE = ho_test_request.HO_TREATMENT_CODE
		JOIN ho_patient
			ON ho_patient.HO_PATIENT_CODE = ho_treatment.HO_PATIENT_CODE
		JOIN ho_test_state
			ON ho_test_state.HO_TEST_STATE_CODE = ho_test_request.HO_TEST_STATE_CODE
		where ho_test_request.HO_TEST_CODE=#{hoTestCode}
		AND ho_treatment.HO_HOSPITAL_CODE=#{hoHospitalCode}		
		AND ho_test_request.HO_TEST_STATE_CODE=#{hoTestStateCode}
	</select>
	
	<!-- 건강검진 뷰 -->
	<select id="checkupView" resultType="com.team4.project.hospital.vaccineCheckup.domain.HoCheckupSub" parameterType="String">
		select
			HO_TEST_REQUEST_CODE,
			ho_treatment.HO_TREATMENT_CODE,
			ho_patient.HO_PATIENT_NAME,
			ho_test.HO_TEST_CODE,
			ho_test.HO_TEST_NAME
		from ho_test_request
		join ho_treatment
			ON ho_treatment.HO_TREATMENT_CODE = ho_test_request.HO_TREATMENT_CODE
		JOIN ho_patient
			ON ho_patient.HO_PATIENT_CODE = ho_treatment.HO_PATIENT_CODE
		JOIN ho_test
			ON ho_test.HO_TEST_CODE = ho_test_request.HO_TEST_CODE
		WHERE ho_test_request.HO_TEST_REQUEST_CODE=#{hoTestRequestCode}
	</select>
	
	<!-- 건강검진 결과 등록 -->
	<insert id="addCheckup" parameterType="com.team4.project.hospital.vaccineCheckup.domain.HoCheckupSub">
		insert into ho_checkup(
			HO_CHECKUP_CODE,
			HO_TEST_REQUEST_CODE,
			HO_TREATMENT_CODE,
			HO_CHECKUP_DATE
		)
		select
			if(not exists (select * from ho_checkup) ,
 				'checkup_1',
				CONCAT('checkup_',
						max(cast(substring(HO_CHECKUP_CODE,9,5) as UNSIGNED ))+1)),
			#{hoTestRequestCode},
			#{hoTreatmentCode},
			now()
		FROM ho_checkup		
	</insert>
	<!-- 검사대기상테에서 결과대기상태로 상태 코드를 업데이트 하는 쿼리문 -->
	<update id="updateState" parameterType="com.team4.project.hospital.test.domain.HoTestRequestSub">
 		update ho_test_request
		INNER JOIN ho_treatment
			ON ho_treatment.HO_TREATMENT_CODE = ho_test_request.HO_TREATMENT_CODE
		INNER JOIN ho_hospital
			ON ho_hospital.HO_HOSPITAL_CODE = ho_treatment.HO_HOSPITAL_CODE
		set
			HO_TEST_START_DATE=now(),
			HO_TEST_STATE_CODE=2
		where ho_hospital.HO_HOSPITAL_CODE=#{hoHospitalCode}
			AND HO_TEST_CODE=#{hoTestCode}
			AND HO_TEST_REQUEST_CODE=#{hoTestRequestCode}
			
 	</update>
 	<!-- 혈액 결과대기상태에서 결과등록 완료로 상태가 변경 -->
 	<update id="updateCheckupTestRequest" parameterType="com.team4.project.hospital.test.domain.HoTestRequestSub" >
 		update ho_test_request
 		INNER JOIN ho_treatment
			ON ho_treatment.HO_TREATMENT_CODE = ho_test_request.HO_TREATMENT_CODE
		INNER JOIN ho_hospital
			ON ho_hospital.HO_HOSPITAL_CODE = ho_treatment.HO_HOSPITAL_CODE
		set
			HO_TEST_STATE_CODE=3
		where ho_hospital.HO_HOSPITAL_CODE=#{hoHospitalCode}
			AND HO_TEST_CODE=#{hoTestCode}
			AND HO_TEST_REQUEST_CODE=#{hoTestRequestCode}
 	</update>
	<!-- 건강검진 테이블에 데이터열 수정 -->
	<update id="updateCheckup" parameterType="com.team4.project.hospital.vaccineCheckup.domain.HoCheckupSub">
		update ho_checkup
		INNER JOIN ho_treatment
			ON ho_treatment.HO_TREATMENT_CODE = ho_checkup.HO_TREATMENT_CODE
		INNER JOIN ho_hospital
			ON ho_hospital.HO_HOSPITAL_CODE = ho_treatment.HO_HOSPITAL_CODE
		set 
			HO_CHECKUP_RESULT_PATH=#{hoCheckUpResultPath},
			HO_CHECKUP_RESULT_NAME=#{hoCheckUpResultName},
			HO_CHECKUP_REGISTRATION_DATE=now()			
		where ho_hospital.HO_HOSPITAL_CODE=#{hoHospitalCode}
			AND HO_TEST_REQUEST_CODE=#{hoTestRequestCode}
	</update>
	<!-- 예방접종 등록 -->
	<insert id="addVaccine" parameterType="com.team4.project.hospital.vaccineCheckup.domain.HoVaccine">
		INSERT INTO ho_vaccine(
			HO_VACCINE_CODE,
			HO_TREATMENT_CODE,
			HO_VACCINE_TYPE_CODE,
			HO_VACCINE_DATE,
			HO_GO_SENDSTATE)
		SELECT
			if(not exists (select * from ho_vaccine) ,
 				'vaccine_1',
				CONCAT('vaccine_',
						max(cast(substring(HO_VACCINE_CODE,9,5) as UNSIGNED ))+1)),
			#{hoTreatmentCode},
			#{hoVaccineTypeCode},
			#{hoVaccineDate},
			0
		FROM ho_vaccine
	</insert>
</mapper>
